# Generated by Django 4.2.8 on 2025-01-29 14:46

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('country_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('country_name', models.CharField(db_index=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Fields',
            fields=[
                ('field_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('field_name', models.CharField(db_index=True, max_length=255)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='well.country')),
            ],
        ),
        migrations.CreateModel(
            name='Reservoirs',
            fields=[
                ('reservoir_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('reservoir_name', models.CharField(db_index=True, max_length=255)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservoirs', to='well.fields')),
            ],
        ),
        migrations.CreateModel(
            name='TubeConnection',
            fields=[
                ('connection_id', models.AutoField(primary_key=True, serialize=False)),
                ('tube_OD', models.FloatField(db_index=True)),
                ('tube_weight', models.FloatField(db_index=True)),
                ('tube_grade', models.CharField(db_index=True, max_length=255)),
                ('conn_name', models.CharField(db_index=True, max_length=255)),
                ('conn_type', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('conn_seal_type', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('conn_OD', models.FloatField(blank=True, db_index=True, null=True)),
                ('conn_yield', models.FloatField(blank=True, db_index=True, null=True)),
                ('conn_uts', models.FloatField(blank=True, db_index=True, null=True)),
                ('conn_burst', models.FloatField(blank=True, db_index=True, null=True)),
                ('conn_tension', models.FloatField(blank=True, db_index=True, null=True)),
                ('conn_compression', models.FloatField(blank=True, db_index=True, null=True)),
                ('conn_maxbend', models.FloatField(blank=True, db_index=True, null=True)),
                ('add_by', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('add_datetime', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='TubularTemp',
            fields=[
                ('tubulartemp_id', models.AutoField(primary_key=True, serialize=False)),
                ('tube_name', models.CharField(db_index=True, max_length=255)),
                ('tube_OD', models.FloatField(db_index=True)),
                ('tube_ID', models.FloatField(db_index=True)),
                ('tube_weight', models.FloatField(db_index=True)),
                ('tube_grade', models.CharField(db_index=True, max_length=255)),
                ('tube_yield', models.FloatField(db_index=True)),
                ('tube_int_drift', models.FloatField(db_index=True)),
                ('tube_burst_press', models.FloatField(db_index=True)),
                ('tube_collapse_press', models.FloatField(db_index=True)),
                ('tube_axial', models.FloatField(db_index=True)),
                ('tube_uts', models.FloatField(db_index=True)),
                ('add_by', models.CharField(db_index=True, max_length=255)),
                ('add_datetime', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='Wells',
            fields=[
                ('well_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('well_name', models.CharField(db_index=True, max_length=255)),
                ('zone', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('fluid', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('production', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('design_type', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('designation', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('depth_ref', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('add_by', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('approved_by', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('add_datetime', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('is_approved', models.BooleanField(db_index=True, default=False)),
                ('lat_start', models.FloatField(blank=True, db_index=True, null=True)),
                ('long_start', models.FloatField(blank=True, db_index=True, null=True)),
                ('lat_end', models.FloatField(blank=True, db_index=True, null=True)),
                ('long_end', models.FloatField(blank=True, db_index=True, null=True)),
                ('activity_log', models.TextField(blank=True, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wells', to='well.country')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wells', to='well.fields')),
                ('reservoir', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wells', to='well.reservoirs')),
            ],
        ),
        migrations.CreateModel(
            name='Tubular',
            fields=[
                ('tube_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('tube_name', models.CharField(db_index=True, max_length=255)),
                ('hole_ID', models.FloatField(blank=True, db_index=True, null=True)),
                ('tube_TVD_from', models.FloatField(blank=True, db_index=True, null=True)),
                ('tube_MD_from', models.FloatField(blank=True, db_index=True, null=True)),
                ('tube_TVD_to', models.FloatField(blank=True, db_index=True, null=True)),
                ('tube_MD_to', models.FloatField(blank=True, db_index=True, null=True)),
                ('cement_TOC', models.FloatField(blank=True, db_index=True, null=True)),
                ('cement_return', models.FloatField(blank=True, db_index=True, null=True)),
                ('cement_log', models.IntegerField(blank=True, db_index=True, null=True)),
                ('formation_FIT', models.FloatField(blank=True, db_index=True, null=True)),
                ('formation_LOT', models.FloatField(blank=True, db_index=True, null=True)),
                ('formation_FBP', models.FloatField(blank=True, db_index=True, null=True)),
                ('add_by', models.CharField(db_index=True, max_length=255)),
                ('add_datetime', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('activity_log', models.TextField(blank=True, null=True)),
                ('conn_temp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tubulars', to='well.tubeconnection')),
                ('tube_temp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tubulars', to='well.tubulartemp')),
                ('well', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tubulars', to='well.wells')),
            ],
        ),
    ]
