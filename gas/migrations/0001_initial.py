# Generated by Django 4.2.8 on 2025-01-29 17:32

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GasField',
            fields=[
                ('field_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Field ID')),
                ('field_name', models.CharField(max_length=255, verbose_name='Field Name')),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='Latitude')),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='Longitude')),
                ('area', models.FloatField(verbose_name='Area (km²)')),
                ('discovery_date', models.DateField(verbose_name='Discovery Date')),
                ('operator_company', models.CharField(max_length=255, verbose_name='Operator Company')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Gas Field',
                'verbose_name_plural': 'Gas Fields',
                'ordering': ['field_name'],
            },
        ),
        migrations.CreateModel(
            name='GasWell',
            fields=[
                ('well_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Well ID')),
                ('well_name', models.CharField(max_length=255, verbose_name='Well Name')),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='Latitude')),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='Longitude')),
                ('depth', models.FloatField(verbose_name='Depth (m)')),
                ('pressure', models.FloatField(verbose_name='Pressure (psi)')),
                ('flow_rate', models.FloatField(verbose_name='Flow Rate (MMscfd)')),
                ('drilling_date', models.DateField(verbose_name='Drilling Date')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('under_maintenance', 'Under Maintenance'), ('abandoned', 'Abandoned')], default='active', max_length=20, verbose_name='Status')),
                ('operator_company', models.CharField(max_length=255, verbose_name='Operator Company')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Gas Well',
                'verbose_name_plural': 'Gas Wells',
                'ordering': ['well_name'],
            },
        ),
        migrations.CreateModel(
            name='WellTest',
            fields=[
                ('test_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Test ID')),
                ('test_date', models.DateField(verbose_name='Test Date')),
                ('test_pressure', models.FloatField(verbose_name='Test Pressure (psi)')),
                ('test_flow_rate', models.FloatField(verbose_name='Test Flow Rate (MMscfd)')),
                ('test_result', models.CharField(choices=[('success', 'Success'), ('failure', 'Failure'), ('inconclusive', 'Inconclusive')], max_length=20, verbose_name='Test Result')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('gas_well', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='well_tests', to='gas.gaswell', verbose_name='Gas Well')),
            ],
            options={
                'verbose_name': 'Well Test',
                'verbose_name_plural': 'Well Tests',
                'ordering': ['test_date'],
            },
        ),
        migrations.CreateModel(
            name='Tubular',
            fields=[
                ('tubular_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Tubular ID')),
                ('tubular_type', models.CharField(choices=[('casing', 'Casing'), ('production', 'Production Tubing'), ('liner', 'Liner'), ('other', 'Other')], max_length=20, verbose_name='Tubular Type')),
                ('diameter', models.FloatField(verbose_name='Diameter (inches)')),
                ('length', models.FloatField(verbose_name='Length (m)')),
                ('material', models.CharField(max_length=255, verbose_name='Material')),
                ('working_pressure', models.FloatField(verbose_name='Working Pressure (psi)')),
                ('installation_date', models.DateField(verbose_name='Installation Date')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('gas_well', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tubulars', to='gas.gaswell', verbose_name='Gas Well')),
            ],
            options={
                'verbose_name': 'Tubular',
                'verbose_name_plural': 'Tubulars',
                'ordering': ['tubular_type'],
            },
        ),
        migrations.CreateModel(
            name='Reservoir',
            fields=[
                ('reservoir_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Reservoir ID')),
                ('reservoir_name', models.CharField(max_length=255, verbose_name='Reservoir Name')),
                ('depth', models.FloatField(verbose_name='Depth (m)')),
                ('volume', models.FloatField(verbose_name='Volume (BCF)')),
                ('pressure', models.FloatField(verbose_name='Pressure (psi)')),
                ('discovery_date', models.DateField(verbose_name='Discovery Date')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('gas_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservoirs', to='gas.gasfield', verbose_name='Gas Field')),
            ],
            options={
                'verbose_name': 'Reservoir',
                'verbose_name_plural': 'Reservoirs',
                'ordering': ['reservoir_name'],
            },
        ),
        migrations.CreateModel(
            name='ProductionData',
            fields=[
                ('production_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Production ID')),
                ('production_date', models.DateField(verbose_name='Production Date')),
                ('gas_volume', models.FloatField(verbose_name='Gas Volume (MMscf)')),
                ('liquid_volume', models.FloatField(verbose_name='Liquid Volume (bbl)')),
                ('pressure', models.FloatField(verbose_name='Pressure (psi)')),
                ('temperature', models.FloatField(verbose_name='Temperature (°C)')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('gas_well', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='production_data', to='gas.gaswell', verbose_name='Gas Well')),
            ],
            options={
                'verbose_name': 'Production Data',
                'verbose_name_plural': 'Production Data',
                'ordering': ['production_date'],
            },
        ),
        migrations.AddField(
            model_name='gaswell',
            name='reservoir',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gas_wells', to='gas.reservoir', verbose_name='Reservoir'),
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('equipment_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Equipment ID')),
                ('equipment_type', models.CharField(choices=[('pump', 'Pump'), ('valve', 'Valve'), ('sensor', 'Sensor'), ('other', 'Other')], max_length=20, verbose_name='Equipment Type')),
                ('equipment_name', models.CharField(max_length=255, verbose_name='Equipment Name')),
                ('installation_date', models.DateField(verbose_name='Installation Date')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('under_maintenance', 'Under Maintenance'), ('failed', 'Failed')], default='active', max_length=20, verbose_name='Status')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('gas_well', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipments', to='gas.gaswell', verbose_name='Gas Well')),
            ],
            options={
                'verbose_name': 'Equipment',
                'verbose_name_plural': 'Equipments',
                'ordering': ['equipment_type'],
            },
        ),
    ]
